# Create new release and publish Python package to PyPI and GitHub Releases
# https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries
# oh also this is completely untested

name: Build & Publish

on:
  workflow_dispatch:
    inputs:
      release_notes:
        description: 'Release notes for the new version'
        required: true

jobs:
  build-release:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7.1', '3.8.0', '3.9.0', '3.10.0', '3.11.0', '3.12.0', '3.13.0']

    steps:
    
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel
        pip install -e "."
    
    - name: Build Release
      run: |
        python setup.py sdist bdist_wheel


  load-pkg-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9.0'
    
    - name: Install toml
      run: pip install toml
    
    - name: Get Version from pyproject.toml
      id: get-version
      run: |
        python -c "
        import toml
        pyproject = toml.load('pyproject.toml')
        version = pyproject['project']['version']
        print(f'version={version}')
        " >> $GITHUB_OUTPUT


  release-pypi:
    needs: build-release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Install Twine
        run: |
          python -m pip install --upgrade pip
          pip install twine
      
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*

  release-github:
    needs: [build-release, load-pkg-version]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.load-pkg-version.outputs.version }}
          name: Release v${{ needs.load-pkg-version.outputs.version }}
          body: ${{ github.event.inputs.release_notes }}
          draft: false
          prerelease: false
          files: |
            dist/*.tar.gz
            dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}